{"version":3,"sources":["randomNameGenerationSource/nameGenerator.js","img/win.gif","Header.jsx","GeneralFeedback.jsx","actions.js","DisplayGameState.jsx","selectors.js","ExecutePlay.jsx","DisplayResults.jsx","DisplayBalance.jsx","WinModal.jsx","App.js","serviceWorker.js","rootReducer.js","api/web3.js","rootSaga.js","store.js","index.js"],"names":["coefficients","require","cList","Object","keys","c","cWeights","values","cK","getHexK","c_f","vList","v","vWeights","vK","v_f","totalPossibilities","k","Math","log","Number","isInteger","Error","concat","getPseudoRandomItem","list","weight","nonce","weight_sum","i","length","getC","getV","pattern","module","exports","hexString","replace","wordParts","forEach","member","parseInt","slice","push","toUpperCase","join","__webpack_require__","p","mapStateToProps","createStructuredSelector","network","state","connect","_ref","react_default","a","createElement","Navbar_default","bg","className","style","borderBottom","Container_default","Brand","href","Text","name","contractAddress","type","feedback","text","Alert_default","variant","updateFeedbackError","updateFeedbackInfo","updateDx","dx","updateResult","id","event","updateResults","indexedEvents","updateNetwork","updateBalance","balance","updateGameState","gameState","updateGameSettings","gameSettings","showWinModal","data","objectSpread","show","stageWrapperId","BackgroundGradient","bottom","top","height","width","ReactKonva","fillLinearGradientStartPoint","x","y","fillLinearGradientEndPoint","fillLinearGradientColorStops","Base","props","assign","GameRect","color","handleClick","_this","setState","Konva","Util","getRandomColor","this","stroke","strokeWidth","onClick","React","Component","canvasMaxWidth","getContainerWidth","document","getElementById","offsetWidth","computeWidth","containerWidth","computeScale","DisplayGameState","_this2","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","stageWidth","stageScale","window","addEventListener","fitStageIntoParentContainer","bind","_this3","gameStateLoaded","Array","isArray","canvasWidth","startingX","lastRectX","boundRight","boundLeft","justifyContent","display","padding","margin","scaleX","scaleY","DisplayGameState_BackgroundGradient","DisplayGameState_Base","map","DisplayGameState_GameRect","key","canvasHeight","draggable","onDragStart","e","isDragging","onDragEnd","target","_lastPos","toFixed","dragBoundFunc","pos","fontSize","topReactY","shadowBlur","fill","mapDispatchToProps","getDx","getNetwork","getContractAddress","getGameSettings","getWidth","getPlayPrice","playPrice","getWinModal","winModal","s","executePlay","Big","div","round","toString","InputGroup_default","FormControl_default","placeholder","aria-label","aria-describedby","value","onChange","_dx","Append","Button_default","ExternalLinkIcon","size","xmlns","viewBox","d","TimeAgo","addLocale","en","timeAgo","byBlockNum","b","blockNumber","getTimestampMs","ts","results","link","_ref2","pending","recent","previous","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","sort","Symbol","iterator","next","done","result","error","timestamp","Date","now","err","return","items","filter","category","Fragment","_result$player","player","_result$hash","hash","_result$fallingCoins","fallingCoins","_result$timestamp","_result$error","Boolean","won","yourAddress","ethereum","selectedAddress","toLowerCase","itsYou","playerName","nameGenerator","timestampMs","date","toLocaleString","split","format","wonAmount","times","Card_default","body","opacity","String","rel","DisplayResults_ExternalLinkIcon","fontWeight","hideWinModal","Modal_default","onHide","Header","closeButton","backgroundColor","Title","Body","role","src","winGif","alt","App","src_Header","Row_default","Col_default","sm","src_DisplayGameState","src_GeneralFeedback","src_ExecutePlay","DisplayBalance","src_DisplayResults","src_WinModal","location","hostname","match","globalReducers","towerGameInstance","arguments","action","defineProperty","combineReducers","web3","Web3","currentProvider","console","version","updateState","subscribeToStateChanges","initialize","getUserBalance","rootSaga","towerGameContract","regenerator_default","wrap","_context","prev","select","sent","getTowerGameInstanceHelper","getGameStateHelper","put","t0","stack","stop","_marked","subscriptionChannel","account","winAmount","_context2","eventChannel","emit","subscribeToResultsHelper","take","fork","getUserAccountWithoutEnable","t1","_marked2","networkId","networkMetadata","_context3","abrupt","eth","net","getId","networks","towerGame","address","getGameSettingsHelper","getPastResultsHelper","_marked3","options","dxScaled","play","gasEstimate","gas","txChannel","_context4","random","getUserAccount","from","methods","estimatePlayGasHelper","floor","send","on","receipt","parseReceipt","parseErrorString","message","_marked4","_context5","getBalance","_marked5","_callee","accounts","_context7","getAccounts","_callee2","_context8","enable","verifyArguments","Contract","abi","_callee3","contract","relativePositions","_context9","getCoinPositionsArray","parseGameState","_callee4","_context10","Promise","all","slicedToArray","_callee6","events","eventsIndexed","_context12","getPastEvents","fromBlock","_ref3","asyncToGenerator","mark","_callee5","block","_context11","getBlock","transactionHash","parsePlayResultEvent","_x8","apply","cb","PlayResult","_callee7","maxGas","computedGas","_context13","estimateGas","dxs","widthBigNumber","xs","reduce","xPrev","dxi","plus","gasUsed","returnValues","coinCount","parseDx","parsePlayer","dxString","dxDecimal","parseFloat","secondTopic","raw","topics","stringToReturn","possibleJsons","possibleJson","json","JSON","parse","kwargs","typeMapping","_arr","_i","_context6","takeEvery","_marked6","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","run","ReactDOM","render","es","BrowserRouter","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7a034c9d.chunk.js","sourcesContent":["const coefficients = require(\"./coefficients.json\");\n\n// coefficients = {\n//   c: { l: 542 },\n//   v: { a: 21 },\n//   c_f: 4095,\n//   v_f: 255\n// };\n\nconst cList = Object.keys(coefficients.c);\nconst cWeights = Object.values(coefficients.c);\nconst cK = getHexK(coefficients.c_f);\nconst vList = Object.keys(coefficients.v);\nconst vWeights = Object.values(coefficients.v);\nconst vK = getHexK(coefficients.v_f);\n\nfunction getHexK(totalPossibilities) {\n  const k = Math.log(totalPossibilities + 1) / Math.log(16);\n  if (!Number.isInteger(k))\n    throw Error(\n      `totalPossibilities must be a power of 16: ${totalPossibilities}`\n    );\n  return k;\n}\n\nfunction getPseudoRandomItem(list, weight, nonce) {\n  var weight_sum = 0;\n  for (var i = 0; i < list.length; i++) {\n    weight_sum += weight[i];\n    if (nonce <= weight_sum) {\n      return list[i];\n    }\n  }\n  throw Error(\"No match found\");\n}\n\nconst getC = nonce => {\n  if (nonce > coefficients.c_f)\n    throw Error(\n      `nonce \"${nonce}\" cannot be bigger than c_f \"${coefficients.c_f}\"`\n    );\n  return getPseudoRandomItem(cList, cWeights, nonce);\n};\nconst getV = nonce => {\n  if (nonce > coefficients.v_f)\n    throw Error(\n      `nonce \"${nonce}\" cannot be bigger than v_f \"${coefficients.v_f}\"`\n    );\n  return getPseudoRandomItem(vList, vWeights, nonce);\n};\n\nconst pattern = [\"c\", \"v\", \"c\", \"v\", \"c\", \"v\"];\n\nfunction nameGenerator(hexString) {\n  if (!hexString || hexString.length < 20)\n    throw Error(\"hexString should be defined and long enough\");\n  hexString = hexString.replace(\"0x\", \"\");\n  const wordParts = [];\n  pattern.forEach(member => {\n    if (member === \"c\") {\n      const nonce = parseInt(hexString.slice(0, cK), 16);\n      hexString = hexString.slice(cK);\n      wordParts.push(getC(nonce));\n    } else if (member === \"v\") {\n      const nonce = parseInt(hexString.slice(0, vK), 16);\n      hexString = hexString.slice(vK);\n      wordParts.push(getV(nonce));\n    } else {\n      throw Error(`Unkown pattern member ${member}, must be \"c\" or \"v\"`);\n    }\n  });\n  // Make sure the first member has only 1 character\n  wordParts[0] = wordParts[0].slice(0, 1).toUpperCase();\n  return wordParts.join(\"\");\n}\n\nmodule.exports = nameGenerator;\n","module.exports = __webpack_public_path__ + \"static/media/win.06e3bf8a.gif\";","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Container from \"react-bootstrap/Container\";\n\nconst Header = ({ network }) => (\n  <Navbar\n    bg=\"light\"\n    className=\"justify-content-between app-header\"\n    style={{ borderBottom: \"1px solid #eeeeee\" }}\n  >\n    <Container className=\"correct-container-padding\">\n      <Navbar.Brand href=\"/\">Ethereum Tower Game</Navbar.Brand>\n      <Navbar.Text className=\"float-right\">\n        {network\n          ? `Network: ${network.name} ${\n              network.contractAddress ? \"\" : \"(Not supported)\"\n            }`\n          : \"No network\"}\n      </Navbar.Text>\n    </Container>\n  </Navbar>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  network: state => state.network\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport Alert from \"react-bootstrap/Alert\";\n\nconst GeneralFeedback = ({ type, text }) => (\n  <Alert variant={type}>{text}</Alert>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  type: state => (state.feedback || {}).type,\n  text: state => (state.feedback || {}).text\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(GeneralFeedback);\n","// Actions\n\n// Trigger store updates\n// =====================\n\n// towerGameInstance, default state = null\n\n// feedback, default state = null\nexport const updateFeedbackError = text => ({\n  type: \"UPDATE_FEEDBACK\",\n  feedback: { type: \"danger\", text }\n});\nexport const updateFeedbackInfo = text => ({\n  type: \"UPDATE_FEEDBACK\",\n  feedback: { type: \"info\", text }\n});\nexport const updateFeedbackSuccess = text => ({\n  type: \"UPDATE_FEEDBACK\",\n  feedback: { type: \"success\", text }\n});\n\n// dx, default state = 0\nexport const updateDx = dx => ({ type: \"UPDATE_DX\", dx });\n\n// results, default state = {}\nexport const updateResult = (id, event) => ({\n  type: \"UPDATE_RESULT\",\n  id,\n  event\n});\nexport const updateResults = indexedEvents => ({\n  type: \"UPDATE_RESULTS\",\n  indexedEvents\n});\n\n// network, default state = null\nexport const updateNetwork = network => ({ type: \"UPDATE_NETWORK\", network });\nexport const updateBalance = balance => ({\n  type: \"UPDATE_NETWORK\",\n  network: { balance }\n});\n\n// gameState, default state = null\nexport const updateGameState = gameState => ({\n  type: \"UPDATE_GAME_STATE\",\n  gameState\n});\n\n// gameSettings, default state = {}\nexport const updateGameSettings = gameSettings => ({\n  type: \"UPDATE_GAME_SETTINGS\",\n  gameSettings\n});\n\n// Show win modal, default state = {}\nexport const updateWinModalText = text => ({\n  type: \"UPDATE_WIN_MODAL\",\n  data: { text }\n});\nexport const showWinModal = text => ({\n  type: \"UPDATE_WIN_MODAL\",\n  data: { show: true, ...(text ? { text } : {}) }\n});\nexport const hideWinModal = () => ({\n  type: \"UPDATE_WIN_MODAL\",\n  data: { show: false }\n});\n\n// Trigger saga functions\n// ======================\nexport const executePlay = () => ({ type: \"EXECUTE_PLAY\" });\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateDx } from \"./actions\";\nimport { createStructuredSelector } from \"reselect\";\nimport { Stage, Layer, Rect, Text } from \"react-konva\";\nimport Konva from \"konva\";\n\nconst stageWrapperId = \"stage-wrapper\";\n\nconst BackgroundGradient = ({ bottom, top, height, width }) => (\n  <Rect\n    width={width}\n    height={height}\n    fillLinearGradientStartPoint={{ x: 0, y: 0 }}\n    fillLinearGradientEndPoint={{ x: 0, y: height }}\n    fillLinearGradientColorStops={[0, top, 1, bottom]}\n  />\n);\n\nconst Base = props => (\n  <Rect\n    {...props}\n    fillLinearGradientStartPoint={{ x: 0, y: 0 }}\n    fillLinearGradientEndPoint={{ x: 0, y: props.height }}\n    fillLinearGradientColorStops={[0, \"#5a3f37\", 1, \"#2c7744\"]}\n  />\n);\n\nclass GameRect extends React.Component {\n  state = {\n    color: \"yellow\"\n  };\n  handleClick = () => {\n    this.setState({\n      color: Konva.Util.getRandomColor()\n    });\n  };\n  render() {\n    return (\n      <Rect\n        {...this.props}\n        fillLinearGradientStartPoint={{ x: 0, y: 0 }}\n        fillLinearGradientEndPoint={{ x: this.props.width, y: 0 }}\n        fillLinearGradientColorStops={[0, \"#f7971e\", 1, \"#ffd200\"]}\n        stroke={\"#8c6300\"}\n        strokeWidth={1}\n        onClick={this.handleClick}\n      />\n    );\n  }\n}\n\n// \"#2bc0e4\", 1, \"#eaecc6\"\nconst canvasMaxWidth = 600;\nfunction getContainerWidth() {\n  return (document.getElementById(stageWrapperId) || {}).offsetWidth || 0;\n  // return window.innerWidth\n}\nfunction computeWidth() {\n  const containerWidth = getContainerWidth();\n  return containerWidth < canvasMaxWidth ? containerWidth : canvasMaxWidth;\n}\nfunction computeScale() {\n  const containerWidth = getContainerWidth();\n  return containerWidth < canvasMaxWidth ? containerWidth / canvasMaxWidth : 1;\n}\n\nclass DisplayGameState extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stageWidth: computeWidth(),\n      stageScale: computeScale()\n    };\n  }\n\n  fitStageIntoParentContainer() {\n    this.setState({ stageWidth: computeWidth(), stageScale: computeScale() });\n  }\n\n  componentDidMount() {\n    window.addEventListener(\n      \"resize\",\n      this.fitStageIntoParentContainer.bind(this)\n    );\n    this.fitStageIntoParentContainer.bind(this)();\n  }\n  render() {\n    // Positions array\n    const gameStateLoaded = Array.isArray(this.props.gameState);\n    const gameState = this.props.gameState || [];\n    // Size constants\n    const canvasMaxHeight = 800;\n\n    const width = 200;\n    const height = 30;\n    const baseHeight = 100;\n\n    // Actual variables used in render\n    // NOT RESPONSIVE\n    // const stageScale = 1;\n    // const canvasWidth = canvasMaxHeight;\n    // RESPONSIVE\n    const stageScale = this.state.stageScale;\n    const canvasWidth = this.state.stageWidth;\n    // ====\n    const canvasHeight = canvasMaxHeight;\n    const halfWidth = width / 2;\n    const startingY = canvasHeight - baseHeight;\n    const startingX = canvasWidth / stageScale / 2;\n\n    const lastRectX =\n      startingX +\n      halfWidth * (gameState[gameState.length - 1] || 0) -\n      width / 2;\n    const boundRight = lastRectX + halfWidth;\n    const boundLeft = lastRectX - halfWidth;\n    const topReactY = 70;\n    const dx = this.props.dx > 1 ? 1 : this.props.dx < -1 ? -1 : this.props.dx;\n\n    return (\n      <div\n        id={stageWrapperId}\n        style={{ justifyContent: \"center\", display: \"flex\" }}\n      >\n        <Stage\n          style={{\n            padding: 0,\n            margin: \"auto\",\n            display: \"block\"\n          }}\n          width={canvasWidth}\n          height={canvasHeight * stageScale}\n          scaleX={stageScale}\n          scaleY={stageScale}\n        >\n          {/* Sky, background color */}\n          <Layer>\n            <BackgroundGradient\n              width={canvasMaxWidth}\n              height={canvasHeight}\n              bottom={\"#eaecc6\"}\n              top={\"#2bc0e4\"}\n            />\n          </Layer>\n          {/* Ground base */}\n          <Layer>\n            <Base\n              x={startingX - width / 2}\n              y={canvasHeight}\n              width={width}\n              height={-baseHeight + height}\n            />\n          </Layer>\n          {/* All static coins */}\n          <Layer>\n            {gameState.map((x, i) => (\n              <GameRect\n                key={i}\n                x={startingX + halfWidth * x - width / 2}\n                y={startingY - i * height}\n                width={width}\n                height={height}\n              />\n            ))}\n          </Layer>\n\n          <Layer>\n            {/* Rectangle hovering, dragable to select a dx */}\n            {gameStateLoaded ? (\n              <GameRect\n                x={lastRectX + (dx || 0) * halfWidth}\n                y={topReactY}\n                width={width}\n                height={height}\n                draggable\n                onDragStart={e => {\n                  this.setState({ isDragging: true });\n                }}\n                onDragEnd={e => {\n                  this.setState({ isDragging: false });\n                  this.props.updateDx(\n                    (\n                      (e.target._lastPos.x - stageScale * lastRectX) /\n                      (stageScale * halfWidth)\n                    ).toFixed(3)\n                  );\n                }}\n                dragBoundFunc={pos => ({\n                  x:\n                    pos.x > stageScale * boundRight\n                      ? stageScale * boundRight\n                      : pos.x < stageScale * boundLeft\n                      ? stageScale * boundLeft\n                      : pos.x,\n                  y: stageScale * topReactY\n                })}\n              />\n            ) : null}\n\n            {/* Text helper, only shows if the rectanlge is being dragged */}\n            {this.state.isDragging ? (\n              <Text\n                text=\"Drop to select a position\"\n                fontSize={18 / stageScale}\n                x={canvasWidth / stageScale / 2 - 80 / stageScale}\n                y={topReactY / 2 - 10}\n                shadowBlur={5}\n                fill={\"white\"}\n              />\n            ) : null}\n          </Layer>\n        </Stage>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  gameState: state => state.gameState,\n  dx: state => state.dx\n});\n\nconst mapDispatchToProps = {\n  updateDx\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DisplayGameState);\n","// Selectors\n\n// towerGameInstance, default state = null\nexport const getTowerGameInstance = state => state.towerGameInstance;\n\n// feedback, default state = null\nexport const getFeedback = state => state.feedback;\n\n// dx, default state = 0\nexport const getDx = state => state.dx;\n\n// results, default state = {}\nexport const getResults = state => state.results;\n\n// network, default state = null\nexport const getNetwork = state => state.network;\nexport const getContractAddress = state =>\n  (getNetwork(state) || {}).contractAddress;\nexport const getNetworkLink = state => (getNetwork(state) || {}).link;\nexport const getBalance = state => (getNetwork(state) || {}).balance;\n\n// gameState, default state = null\nexport const getGameState = state => state.gameState;\n\n// gameSettings, default state = {}\nexport const getGameSettings = state => state.gameSettings;\nexport const getWidth = state => getGameSettings(state).width;\nexport const getPlayPrice = state => getGameSettings(state).playPrice;\n\n// Show win modal, default state = false\nexport const getWinModal = state => state.winModal;\nexport const getWinModalShow = state => (getWinModal(state) || {}).show;\nexport const getWinModalText = state => (getWinModal(state) || {}).text;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport * as s from \"./selectors\";\nimport { updateDx, executePlay } from \"./actions\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport Big from \"big.js\";\n\nconst inputId = \"play-input-position\";\n\nconst ExecutePlay = ({ dx, updateDx, executePlay, playPrice }) => (\n  <div>\n    <h5 className=\"sub-sub-title\">\n      Execute play{\" \"}\n      {playPrice\n        ? `(${Big(playPrice)\n            .div(Big(1e18))\n            .round(5)\n            .toString()} ETH)`\n        : null}\n    </h5>\n    <InputGroup>\n      <FormControl\n        id={inputId}\n        type=\"number\"\n        placeholder=\"Coin position\"\n        aria-label=\"Coin position\"\n        aria-describedby=\"basic-addon2\"\n        value={dx || \"\"}\n        onChange={e => {\n          const _dx = e.target.value;\n          if (_dx <= 1 && _dx >= -1) updateDx(_dx);\n        }}\n      />\n      <InputGroup.Append>\n        <Button variant=\"info\" onClick={executePlay}>\n          Play\n        </Button>\n      </InputGroup.Append>\n    </InputGroup>\n  </div>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  dx: s.getDx,\n  playPrice: s.getPlayPrice\n});\n\nconst mapDispatchToProps = {\n  updateDx,\n  executePlay\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExecutePlay);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport * as s from \"./selectors\";\nimport Card from \"react-bootstrap/Card\";\nimport TimeAgo from \"javascript-time-ago\";\nimport en from \"javascript-time-ago/locale/en\";\nimport Big from \"big.js\";\nimport nameGenerator from \"./randomNameGenerationSource/nameGenerator\";\n\nconst useNameGenerator = true;\n\nconst ExternalLinkIcon = ({ size }) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    width={size}\n    height={size}\n  >\n    <path\n      fill=\"currentColor\"\n      d=\"M 5 3 C 3.9069372 3 3 3.9069372 3 5 L 3 19 C 3 20.093063 3.9069372 21 5 21 L 19 21 C 20.093063 21 21 20.093063 21 19 L 21 12 L 19 12 L 19 19 L 5 19 L 5 5 L 12 5 L 12 3 L 5 3 z M 14 3 L 14 5 L 17.585938 5 L 8.2929688 14.292969 L 9.7070312 15.707031 L 19 6.4140625 L 19 10 L 21 10 L 21 3 L 14 3 z\"\n    />\n  </svg>\n);\n\nTimeAgo.addLocale(en);\nconst timeAgo = new TimeAgo(\"en-US\");\n\nwindow.timeAgo = timeAgo;\n\nconst trimString = s =>\n  typeof s === \"string\" && s.length > 10 ? `${s.slice(0, 10)}...` : s;\n\nconst byBlockNum = (a, b) => {\n  if (!(a || {}).blockNumber) return -1;\n  if (!(b || {}).blockNumber) return 1;\n  return (b.blockNumber || 0) - (a.blockNumber || 0);\n};\n\nconst getTimestampMs = ts => (ts ? (ts > 1e11 ? ts : ts * 1000) : ts);\nconst msThreshold = 24 * 60 * 60 * 1000;\n\nconst DisplayResults = ({ results, link, playPrice }) => {\n  const pending = [];\n  const recent = [];\n  const previous = [];\n  for (const result of Object.values(results).sort(byBlockNum)) {\n    if (!result.blockNumber && !result.error) pending.push(result);\n    else if (\n      result.error ||\n      (result.timestamp &&\n        Date.now() - getTimestampMs(result.timestamp) < msThreshold)\n    )\n      recent.push(result);\n    else previous.push(result);\n  }\n  const categories = [\n    {\n      name: \"Pending plays\",\n      items: pending\n    },\n    {\n      name: \"Recent plays\",\n      items: recent\n    },\n    {\n      name: \"Previous plays\",\n      items: previous\n    }\n  ];\n  return categories\n    .filter(category => category.items.length)\n    .map(category => (\n      <React.Fragment key={category.name}>\n        <h5 className=\"sub-sub-title\">{category.name}</h5>\n        {category.items.map((result, i) => {\n          const {\n            player = \"\",\n            hash = \"\",\n            fallingCoins = 0,\n            timestamp = \"\",\n            error = \"\",\n            dx\n          } = result;\n          const pending = !Boolean(result.blockNumber) && !error;\n          const won = fallingCoins > 0;\n          const yourAddress = (\n            (window.ethereum || {}).selectedAddress || \"\"\n          ).toLowerCase();\n          const itsYou =\n            pending ||\n            (yourAddress && yourAddress === (player || \"\").toLowerCase());\n          const playerName = itsYou\n            ? \"You\"\n            : useNameGenerator && player.length > 20\n            ? nameGenerator(player)\n            : trimString(player);\n\n          const timestampMs = getTimestampMs(timestamp);\n          const date = pending\n            ? \"pending\"\n            : timestampMs\n            ? Date.now() - timestampMs > msThreshold\n              ? new Date(getTimestampMs(timestamp))\n                  .toLocaleString(\"en-GB\")\n                  .split(\",\")[0]\n              : timeAgo.format(new Date(getTimestampMs(timestamp)))\n            : null;\n          const wonAmount = won\n            ? playPrice\n              ? Big(playPrice || 0)\n                  .div(Big(1e18))\n                  .times(fallingCoins)\n                  .toString() + \" ETH\"\n              : fallingCoins + \" coins\"\n            : null;\n          return (\n            <Card\n              key={hash || i}\n              body\n              className={`mb-2 app-card ${\n                pending ? \"pending\" : won ? \"won\" : \"\"\n              }`}\n            >\n              <div\n                className=\"d-flex justify-content-between\"\n                style={{ opacity: itsYou ? 0.8 : 0.5 }}\n              >\n                <div>\n                  {error ? (\n                    <React.Fragment>\n                      <strong>Error! </strong> {String(error)}\n                    </React.Fragment>\n                  ) : (\n                    <React.Fragment>\n                      {playerName}{\" \"}\n                      {won ? (\n                        <span>won {wonAmount}</span>\n                      ) : (\n                        <span>\n                          played <span style={{ opacity: 0.3 }}>({dx})</span>\n                        </span>\n                      )}\n                    </React.Fragment>\n                  )}\n                </div>\n                <div>\n                  {date}{\" \"}\n                  {link && hash ? (\n                    <a\n                      href={`${link}${hash}`}\n                      rel=\"noopener noreferrer\"\n                      target=\"_blank\"\n                    >\n                      <ExternalLinkIcon size={16} />\n                    </a>\n                  ) : null}\n                </div>\n              </div>\n            </Card>\n          );\n        })}\n      </React.Fragment>\n    ));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  results: s.getResults,\n  link: s.getNetworkLink,\n  playPrice: s.getPlayPrice\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DisplayResults);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport Card from \"react-bootstrap/Card\";\nimport * as s from \"./selectors\";\nimport Big from \"big.js\";\n\nconst ExecutePlay = ({ balance }) =>\n  typeof balance !== \"undefined\" ? (\n    <div>\n      <h5 className=\"sub-sub-title\">Your balance</h5>\n      <Card\n        body\n        className=\"mb-2 app-card\"\n        style={{ fontSize: \"120%\", fontWeight: 600, opacity: 0.8 }}\n      >\n        {Big(balance || 0)\n          .div(Big(1e18))\n          .round(5)\n          .toString() + \" ETH\"}\n      </Card>\n    </div>\n  ) : null;\n\nconst mapStateToProps = createStructuredSelector({\n  balance: s.getBalance\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExecutePlay);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport * as s from \"./selectors\";\nimport { hideWinModal } from \"./actions\";\nimport Modal from \"react-bootstrap/Modal\";\nimport winGif from \"./img/win.gif\";\n\nconst WinModal = ({ show, text, hideWinModal }) => (\n  <>\n    <Modal show={show} onHide={hideWinModal.bind(this)}>\n      <Modal.Header closeButton style={{ backgroundColor: \"#f0f0f0\" }}>\n        <Modal.Title />\n      </Modal.Header>\n      <Modal.Body>\n        <div className=\"d-flex justify-content-center mt-3\">\n          <span role=\"img\" aria-label=\"party\" style={{ fontSize: \"200%\" }}>\n            🎉 {text}! 🎉\n          </span>\n        </div>\n\n        <div\n          className=\"d-flex justify-content-center mb-3\"\n          style={{ fontSize: \"80%\", opacity: 0.5 }}\n        >\n          And it's legit, check it on etherscan!\n        </div>\n        <div className=\"d-flex justify-content-center mb-5\">\n          <img src={winGif} alt=\"celebration!\" />\n        </div>\n      </Modal.Body>\n    </Modal>\n  </>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  show: s.getWinModalShow,\n  text: s.getWinModalText\n});\n\nconst mapDispatchToProps = {\n  hideWinModal\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WinModal);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport GeneralFeedback from \"./GeneralFeedback\";\nimport DisplayGameState from \"./DisplayGameState\";\nimport ExecutePlay from \"./ExecutePlay\";\nimport DisplayResults from \"./DisplayResults\";\nimport DisplayBalance from \"./DisplayBalance\";\nimport WinModal from \"./WinModal\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Header />\n        <div className=\"app-body\">\n          <Container className=\"mt-4 mb-5\">\n            <Row>\n              <Col sm={7} className=\"mb-4\">\n                <DisplayGameState />\n              </Col>\n              <Col sm={5} className=\"mb-4 side-column-controls\">\n                <GeneralFeedback />\n                <div className=\"horizontal-line\" />\n                <ExecutePlay />\n                <div className=\"horizontal-line\" />\n                <DisplayBalance />\n                <div className=\"horizontal-line\" />\n                <DisplayResults />\n              </Col>\n            </Row>\n          </Container>\n          <WinModal />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from \"redux\";\n\n// Define global reducers. This live outside from the module construction\nconst globalReducers = {\n  towerGameInstance: (state = null, action) => {\n    switch (action.type) {\n      case \"UPDATE_INSTANCE\":\n        return action.towerGameInstance;\n      default:\n        return state;\n    }\n  },\n  feedback: (state = null, action) => {\n    switch (action.type) {\n      case \"UPDATE_FEEDBACK\":\n        return action.feedback;\n      default:\n        return state;\n    }\n  },\n  dx: (state = 0, action) => {\n    switch (action.type) {\n      case \"UPDATE_DX\":\n        return action.dx;\n      default:\n        return state;\n    }\n  },\n  results: (state = {}, action) => {\n    switch (action.type) {\n      case \"UPDATE_RESULT\":\n        return {\n          ...state,\n          [action.id]: action.event\n        };\n      case \"UPDATE_RESULTS\":\n        return {\n          ...state,\n          ...action.indexedEvents\n        };\n      default:\n        return state;\n    }\n  },\n  network: (state = null, action) => {\n    switch (action.type) {\n      case \"UPDATE_NETWORK\":\n        return {\n          ...state,\n          ...action.network\n        };\n      default:\n        return state;\n    }\n  },\n  gameState: (state = null, action) => {\n    switch (action.type) {\n      case \"UPDATE_GAME_STATE\":\n        return action.gameState;\n      default:\n        return state;\n    }\n  },\n  gameSettings: (state = {}, action) => {\n    switch (action.type) {\n      case \"UPDATE_GAME_SETTINGS\":\n        return {\n          ...state,\n          ...action.gameSettings\n        };\n      default:\n        return state;\n    }\n  },\n  winModal: (state = {}, action) => {\n    switch (action.type) {\n      case \"UPDATE_WIN_MODAL\":\n        return {\n          ...state,\n          ...action.data\n        };\n      default:\n        return state;\n    }\n  }\n};\n\nexport default combineReducers(globalReducers);\n","import Web3 from \"web3\";\n\nconst web3 = window.ethereum\n  ? new Web3(window.ethereum) // Modern dapp browsers\n  : window.web3\n  ? new Web3(window.web3.currentProvider) // Legacy dapp browsers\n  : null; // Non-dapp browsers\n\nconsole.log(`Web3 version: ${web3.version}`);\n\nexport default web3;\n","import { call, fork, put, select, take, takeEvery } from \"redux-saga/effects\";\nimport { eventChannel } from \"redux-saga\";\nimport web3 from \"./api/web3\";\nimport towerGame from \"./contracts/TowerGame.json\";\nimport networks from \"./api/networks.json\";\nimport * as s from \"./selectors\";\nimport * as a from \"./actions\";\nimport Big from \"big.js\";\n\nfunction* updateState() {\n  try {\n    /**\n     * Fetch parameters\n     */\n    const contractAddress = yield select(s.getContractAddress);\n    const towerGameContract = getTowerGameInstanceHelper(contractAddress);\n    const width = yield select(s.getWidth);\n\n    /**\n     * Get state and update if necessary (Prevent useless updates)\n     */\n    const gameState = yield call(getGameStateHelper, towerGameContract, width);\n    console.log({ gameState });\n    yield put(a.updateGameState(gameState));\n  } catch (e) {\n    console.error(`Error on updateState: ${e.stack}`);\n  }\n}\n\nfunction* subscribeToStateChanges() {\n  try {\n    /**\n     * Fetch parameters\n     */\n    const contractAddress = yield select(s.getContractAddress);\n    const towerGameContract = getTowerGameInstanceHelper(contractAddress);\n    const width = yield select(s.getWidth);\n\n    /**\n     * Create subscription channel\n     */\n    const subscriptionChannel = eventChannel(emit => {\n      subscribeToResultsHelper(towerGameContract, width, emit);\n      return function unsubscribe() {};\n    });\n    while (true) {\n      try {\n        const event = yield take(subscriptionChannel);\n        console.log(\"Received state changed event\", event);\n        yield put(a.updateResult(event.hash, event));\n        yield fork(updateState);\n        yield fork(getUserBalance);\n        /**\n         * Verify if this is a winning event for the user\n         */\n        const account = yield call(getUserAccountWithoutEnable);\n        if (\n          account &&\n          event.player &&\n          account.toLowerCase() === event.player.toLowerCase() &&\n          event.fallingCoins > 0\n        ) {\n          const playPrice = yield select(s.getPlayPrice);\n          const winAmount = Big(playPrice || 0)\n            .div(Big(1e18))\n            .times(event.fallingCoins)\n            .toString();\n          yield put(a.showWinModal(`You won ${winAmount} ETH`));\n        }\n      } catch (err) {\n        console.error(\"subscriptionChannel error:\", err);\n      }\n    }\n  } catch (e) {\n    console.error(`Error on subscribeToStateChanges: ${e.stack}`);\n  }\n}\n\nfunction* initialize() {\n  try {\n    /**\n     * Print feedback if metamask is not installed\n     */\n    if (!web3) {\n      return yield put(\n        a.updateFeedbackError(\n          \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n        )\n      );\n    }\n\n    /**\n     * Fetch network information\n     */\n    yield put(a.updateFeedbackInfo(\"Loading network info...\"));\n    const networkId = yield call(web3.eth.net.getId);\n    // networkMetadata = { name, desc }\n    const networkMetadata = networks[networkId] || {};\n    const contractAddress = (towerGame.networks[networkId] || {}).address;\n    yield put(\n      a.updateNetwork({ networkId, contractAddress, ...networkMetadata })\n    );\n    // Stop initialization, network ID not supported\n    if (contractAddress) {\n      yield put(a.updateFeedbackInfo(`Loaded network! ID ${networkId}`));\n    } else {\n      yield put(a.updateFeedbackError(`Network ID ${networkId} not supported`));\n      return console.error(`Network ID ${networkId} not supported`);\n    }\n    // Fetch user balance if possible\n    yield fork(getUserBalance);\n\n    /**\n     * Initialize game instance\n     */\n\n    const towerGameContract = getTowerGameInstanceHelper(contractAddress);\n    // Get game settings\n    const gameSettings = yield call(getGameSettingsHelper, towerGameContract);\n    yield put(a.updateGameSettings(gameSettings));\n    // Update game state\n    yield put(a.updateFeedbackInfo(\"Updating game state...\"));\n    yield call(updateState);\n    yield put(a.updateFeedbackInfo(\"Updated game state!\"));\n    // Fetch old events\n    const indexedEvents = yield call(\n      getPastResultsHelper,\n      towerGameContract,\n      gameSettings.width\n    );\n    yield put(a.updateResults(indexedEvents));\n    // Subscribe to new events\n    yield fork(subscribeToStateChanges);\n  } catch (e) {\n    console.error(`Error on initialize: ${e.stack}`);\n  }\n}\n\nfunction* executePlay() {\n  let id = randomHexString();\n  try {\n    /**\n     * Fetch necessary parameters\n     */\n    const contractAddress = yield select(s.getContractAddress);\n    const towerGameContract = getTowerGameInstanceHelper(contractAddress);\n\n    const dx = yield select(s.getDx);\n    const width = yield select(s.getWidth);\n    const playPrice = yield select(s.getPlayPrice);\n    const account = yield call(getUserAccount);\n    // Fetch the user balance after a possible authorization\n    yield fork(getUserBalance);\n    const options = { from: account, value: playPrice };\n    const dxScaled = dx === 1 ? dx * width - 1 : dx * width;\n\n    /**\n     * Create play instance and compute gas\n     */\n\n    const play = towerGameContract.methods.play(dxScaled);\n    const gasEstimate = yield call(estimatePlayGasHelper, play, options);\n    // Provide some overhead gas.\n    // - If the gasUsed is exact, web3 or the node thinks it run out of gas\n    // - If some other tx is run before this one, it may alter the amount of gas needed\n    const gas = Math.floor(1.1 * gasEstimate);\n\n    /**\n     * Handle the transaction execution\n     */\n    const txChannel = eventChannel(emit => {\n      play\n        .send({ ...options, gas })\n        // \"transactionHash\" returns String: is fired right after the transaction\n        // is sent and a transaction hash is available.\n        .on(\"transactionHash\", hash => {\n          id = hash;\n          console.log(`tx id ${id} on transactionHash`, { hash });\n          // Store initial state in the store to show in the UI\n          emit({ hash, player: account, dx });\n        })\n        // \"receipt\" returns Object: is fired when the transaction receipt is available.\n        // Receipts from contracts will have no logs property, but instead an events\n        // property with event names as keys and events as properties.\n        .on(\"receipt\", receipt => {\n          console.log(`tx id ${id} on receipt`, { receipt });\n          emit(parseReceipt(receipt, width));\n        })\n        // \"error\" returns Error: is fired if an error occurs during sending.\n        // If an out of gas error, the second parameter is the receipt.\n        .on(\"error\", (error, receipt) => {\n          console.log(`tx id ${id} on receipt`, { error, receipt });\n          emit({ error: parseErrorString(error.message) });\n        });\n      return function unsubscribe() {};\n    });\n\n    while (true) {\n      try {\n        const data = yield take(txChannel);\n        yield put(a.updateResult(id, data));\n      } catch (e) {\n        console.error(`subscriptionChannel error: ${e.stack}`);\n        yield put(a.updateResult(id, { error: parseErrorString(e.message) }));\n      }\n    }\n  } catch (e) {\n    console.error(`Error on executePlay: ${e.stack}`);\n    yield put(a.updateResult(id, { error: parseErrorString(e.message) }));\n  }\n}\n\nfunction* getUserBalance() {\n  try {\n    const account = yield call(getUserAccountWithoutEnable);\n    if (account) {\n      const balance = yield call(web3.eth.getBalance, account);\n      yield put(a.updateBalance(balance));\n    }\n  } catch (e) {\n    console.error(`Error on getUserBalance: ${e.stack}`);\n  }\n}\n\n/**\n * Helpers\n * =======\n */\n\nasync function getUserAccountWithoutEnable() {\n  // On modern dApp browsers the account maybe available\n  if (window.ethereum) {\n    return window.ethereum.selectedAddress;\n  }\n  // On non-modern dApp browser the accounts will be available for sure\n  const accounts = await web3.eth.getAccounts();\n  return accounts[0];\n}\n\nasync function getUserAccount() {\n  // Enable accounts on modern dApp browsers\n  if (window.ethereum && window.ethereum.enable) {\n    await window.ethereum.enable();\n  }\n  const accounts = await web3.eth.getAccounts();\n  return accounts[0];\n}\n\n/**\n * Abstracts contract instance creation\n * @return {towerGameInstance} contract\n */\nfunction getTowerGameInstanceHelper(address) {\n  verifyArguments({ address }, { address: \"string\" });\n  return new web3.eth.Contract(towerGame.abi, address);\n}\n\n/**\n * Fetch contract state\n * @param {towerGameInstance} contract\n *\n */\nasync function getGameStateHelper(contract, width) {\n  verifyArguments({ contract, width }, { contract: \"object\", width: \"string\" });\n  const relativePositions = await contract.methods\n    .getCoinPositionsArray()\n    .call();\n  return parseGameState(relativePositions, width);\n}\n\n/**\n * Fetches the game settings:\n * - int width: 50000,\n * - int playPrice: 10000000000\n * @param {towerGameInstance} contract\n * @return {Object}\n */\nasync function getGameSettingsHelper(contract) {\n  verifyArguments({ contract }, { contract: \"object\" });\n  const [width, playPrice] = await Promise.all([\n    contract.methods.width().call(),\n    contract.methods.playPrice().call()\n  ]);\n  return { width, playPrice };\n}\n\n/**\n * Fetches past results from PlayResult events\n * @param {towerGameInstance} contract\n * @return {Array}\n */\nasync function getPastResultsHelper(contract, width) {\n  verifyArguments({ contract, width }, { contract: \"object\", width: \"string\" });\n  const events = await contract.getPastEvents(\"PlayResult\", { fromBlock: 0 });\n  const eventsIndexed = {};\n  await Promise.all(\n    events.map(async event => {\n      const block = await web3.eth.getBlock(event.blockNumber);\n      eventsIndexed[event.transactionHash] = {\n        ...parsePlayResultEvent(event, width),\n        timestamp: block.timestamp\n      };\n    })\n  );\n  return eventsIndexed;\n}\n\n/**\n * Subscribes to PlayResult events\n * {\n *    blockNumber: 10368774,\n *    returnValues: {\n *      coinCount: \"2\",\n *      dx: \"-45000\",\n *      fallingCoins: \"2\",\n *      player: \"0x204A1159f...\"\n *    }\n *  }\n * @param {towerGameInstance} contract\n * @param {Function} cb (error, event) => {}\n */\nfunction subscribeToResultsHelper(contract, width, cb) {\n  verifyArguments(\n    { contract, width, cb },\n    { contract: \"object\", width: \"string\", cb: \"function\" }\n  );\n  contract.events.PlayResult({}, (error, event) => {\n    if (error) console.error(\"Error getting PlayResult event\", error);\n    else\n      cb({\n        ...parsePlayResultEvent(event, width),\n        timestamp: Math.floor(Date.now() / 1000)\n      });\n  });\n}\n\n/**\n * Computes the estimated gas of the play method\n * @param {playMethodInstance} play\n * @param {Object} options {from: playerAddress, value: playPrice in Wei}\n */\nasync function estimatePlayGasHelper(play, options) {\n  verifyArguments({ play, options }, { options: \"object\" });\n  const maxGas = 5000000;\n  const computedGas = await play.estimateGas({ ...options, gas: maxGas });\n  if (computedGas >= maxGas) throw Error(\"Method ran out of gas\");\n  return computedGas;\n}\n\n/**\n * Random hex string of ~12 bytes\n */\nfunction randomHexString() {\n  return Big(String(Math.random()).slice(2) + Date.now()).toString(16);\n}\n\n/**\n * Utilities\n * =========\n */\n\n/**\n * Computes the absolute positions of the game state from the relative positions\n * @param {Array} relativePositions [1000, -1000, 500]\n * @param {Integer} width 1000\n * @return {Array} [1, 0, 0.5]\n */\nfunction parseGameState(dxs, width) {\n  verifyArguments({ dxs, width }, { dxs: \"array\", width: \"string\" });\n  const roundingDigits = 4;\n  const widthBigNumber = Big(width);\n  // First do a cumulative sum of the relative positions\n  const xs = [];\n  dxs\n    .map(dx => Big(dx))\n    .reduce((xPrev, dxi, i) => (xs[i] = xPrev.plus(dxi)), Big(0));\n  return xs.map(x =>\n    x\n      .div(widthBigNumber)\n      .round(roundingDigits)\n      .toString()\n  );\n}\n\nfunction parseReceipt(receipt, width) {\n  verifyArguments({ receipt, width }, { receipt: \"object\", width: \"string\" });\n  // PlayResult event may not be available\n  const event = (receipt.events || {}).PlayResult;\n  return {\n    ...(event ? parsePlayResultEvent(event, width) : {}),\n    timestamp: Math.floor(Date.now() / 1000),\n    gasUsed: receipt.gasUsed\n  };\n}\n\n/**\n * Parses a play result event\n * @param {event} event\n *  {\n *    transactionHash: 0x12012380abcbab3b31b42b412,\n *    blockNumber: 10368774,\n *    returnValues: {\n *      coinCount: \"2\",\n *      dx: \"-45000\",\n *      fallingCoins: \"2\",\n *      player: \"0x204A1159f...\"\n *    }\n *    raw: {\n *      topics: [\n *        '0xfd43ade1c09fa...', // Event id\n *        '0x7f9fade1c0d57...'  // First indexed parameter (abi encoded)\n *      ]\n *    }\n *  }\n */\nfunction parsePlayResultEvent(event, width) {\n  verifyArguments({ event, width }, { event: \"object\", width: \"string\" });\n  return {\n    // Return values:\n    fallingCoins: event.returnValues.fallingCoins,\n    coinCount: event.returnValues.coinCount,\n    dx: parseDx(event.returnValues.dx, width),\n    player: parsePlayer(event),\n    // Transaction hash (if available):\n    ...(event.transactionHash ? { hash: event.transactionHash } : {}),\n    // BlockNumber (if available):\n    ...(event.blockNumber ? { blockNumber: event.blockNumber } : {})\n  };\n}\n\n/**\n * Return dx formated:\n * - +0.30\n * - -0.75\n * - +0.00\n * @param {String} dx\n * @param {String} width\n */\nfunction parseDx(dx, width) {\n  if (!width) return null;\n  const dxString = width\n    ? Big(dx)\n        .div(Big(width))\n        .round(2)\n        .toString()\n    : null;\n  const dxDecimal = parseFloat(dxString).toFixed(2);\n  return dxDecimal > 0 ? \"+\" + String(dxDecimal) : String(dxDecimal);\n}\n\n/**\n * For some wierd reason the indexed logged value \"player\" is not correctly parsed\n * and returns always the same address\n * @param {Object} event\n */\nfunction parsePlayer(event) {\n  verifyArguments({ event }, { event: \"object\" });\n  const secondTopic = event.raw.topics[1];\n  return secondTopic\n    ? \"0x\" + secondTopic.slice(2 + 2 * (32 - 20))\n    : event.returnValues.player;\n}\n\nfunction parseErrorString(s) {\n  let stringToReturn;\n  try {\n    /**\n     * - Split by newline and keep the first line only\n     * - Try to parse JSON and assume it's an error object\n     */\n    /* eslint-disable no-useless-escape */\n\n    if (!s) stringToReturn = s;\n    else if (typeof s === \"string\") {\n      stringToReturn = s = s.split(/\\r?\\n/)[0] || \"\";\n      const possibleJsons = s.match(/\\{.*\\:.*\\}/g);\n      if (Array.isArray(possibleJsons)) {\n        for (const possibleJson of possibleJsons) {\n          try {\n            const json = JSON.parse(possibleJson);\n            if (json.message) {\n              stringToReturn = json.message;\n              break;\n            }\n          } catch (e) {\n            //\n          }\n        }\n        stringToReturn = s;\n      }\n    }\n  } catch (e) {\n    stringToReturn = s;\n  } finally {\n    return String(stringToReturn);\n  }\n}\n\n/**\n * Verify arguments\n * @param {Object} kwargs\n * @param {Object} typeMapping\n */\nfunction verifyArguments(kwargs, typeMapping) {\n  for (const key of Object.keys(kwargs)) {\n    if (typeof kwargs[key] === \"undefined\")\n      throw Error(`Argument \"${key}\" must be defined`);\n    if (typeMapping && typeMapping[key]) {\n      if (typeMapping[key] === \"array\") {\n        if (!Array.isArray(kwargs[key]))\n          throw Error(`Argument \"${key}\" must be an Array`);\n      } else if (typeof kwargs[key] !== typeMapping[key])\n        throw Error(\n          `Argument \"${key}\" must be of type ${\n            typeMapping[key]\n          }, instead it is ${typeof kwargs[key]}`\n        );\n    }\n  }\n}\n\nfunction* rootSaga() {\n  yield takeEvery(\"EXECUTE_PLAY\", executePlay);\n  yield fork(initialize);\n}\n\nexport default rootSaga;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"./rootReducer\";\nimport rootSaga from \"./rootSaga\";\n\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  // eslint-disable-next-line no-underscore-dangle\n  compose(\n    applyMiddleware(sagaMiddleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\n// then run the saga\nsagaMiddleware.run(rootSaga);\n\n// For debugging and testing\nwindow.store = store;\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}